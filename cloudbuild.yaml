steps:
  # 1Ô∏è‚É£ Instalar Node y dependencias
  - name: 'node:22.17-bullseye'
    id: 'Install dependencies'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm ci

  # 2Ô∏è‚É£ Detectar apps afectadas
  - name: 'node:22.17-bullseye'
    id: 'Affected apps'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Detecting affected projects..."
        # Compara el commit anterior de main con el commit que acaba de llegar
        affected=$(npx nx print-affected --target=build --base=origin/main~1 --head=HEAD --select=projects)
        echo "AFFECTED_APPS=$affected" >> $BASH_ENV

  # 3Ô∏è‚É£ Construir y desplegar solo apps afectadas
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build and deploy apps'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Affected apps: $AFFECTED_APPS"
        for app in $AFFECTED_APPS; do
          echo "üöÄ Building $app..."
          docker build -t gcr.io/$PROJECT_ID/$app ./apps/$app
          docker push gcr.io/$PROJECT_ID/$app
          echo "Deploying $app to Cloud Run..."
          gcloud run deploy $app \
            --image=gcr.io/$PROJECT_ID/$app \
            --platform=managed \
            --region=us-central1 \
            --quiet

# 4Ô∏è‚É£ Opciones generales de la build
options:
  logging: CLOUD_LOGGING_ONLY  # Evita el error de "logs bucket" cuando se usa service_account

# 5Ô∏è‚É£ Timeout opcional (por si tu build tarda mucho)
timeout: "1800s"  # 30 minutos
